{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guradarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","setResultado","setError","useEffect","a","url","fetch","respuesta","json","cod","consultarApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cc304f1.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <Fragment>\r\n            <nav>\r\n                <div className=\"nav-wrapper orange darken-1\">\r\n                    <a href='#!' className=\"brand-logo\">{titulo}</a>\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst Error = ({mensaje}) => (<p className=\"red darken-4 error\">{mensaje}</p>);\r\n \r\nexport default Error;","import React, {useState} from 'react';\r\nimport Error from './../components/Error';\r\n\r\nconst Formulario = ({busqueda, guradarBusqueda, guardarConsultar}) => {\r\n\r\n    //state del formulario\r\n    // const [busqueda, guradarBusqueda] = useState({\r\n    //     ciudad: \"\",\r\n    //     pais: \"\"\r\n    // });\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //destructuración de la constante busqueda\r\n    const {ciudad, pais} = busqueda; \r\n\r\n    //Función que coloca los elementos en el state\r\n    const handleChange = e => {\r\n        //Actualizar el state\r\n        guradarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    //Al enviar el form\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if(ciudad.trim() === \"\" | pais.trim() === \"\"){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        //Pasarlo al componete principal\r\n        guardarConsultar(true);\r\n    };\r\n\r\n    return ( \r\n       <form onSubmit={handleSubmit}>\r\n       {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null}\r\n        <div className=\"input-field col s12\">\r\n            <input\r\n                type=\"text\"\r\n                name=\"ciudad\"\r\n                id=\"ciudad\"\r\n                value={ciudad}\r\n                onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"ciudad\">Ciudad:</label>\r\n        </div>\r\n\r\n        <div className=\"input-field col s12\">\r\n            <select\r\n                name=\"pais\"\r\n                id=\"pais\"\r\n                value={pais}\r\n                onChange={handleChange}\r\n            >\r\n                <option value=\"\">-- Selecciona un país --</option>\r\n                <option value=\"US\">Estados Unidos</option>\r\n                <option value=\"MX\">México</option>\r\n                <option value=\"AR\">Argentina</option>\r\n                <option value=\"CO\">Colombia</option>\r\n                <option value=\"CR\">Costa Rica</option>\r\n                <option value=\"ES\">España</option>\r\n                <option value=\"CL\">Chile</option>\r\n                <option value=\"PE\">Perú</option>\r\n            </select>\r\n            <label htmlFor=\"pais\">País:</label>\r\n        </div>\r\n        <div className=\"input-field col s12\">\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Buscar Clima\"\r\n                className=\"waves-effect waves-light btn-large btn-block #ffd740 amber accent-2\"\r\n            />\r\n        </div>\r\n       </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Clima = ({resultado}) => {\r\n\r\n    //Extraemos los valores para siplificar (con destructuring)\r\n    const {main, name} = resultado;\r\n\r\n    //Si no vienen datos no eh¡jecutamos el componente\r\n    if(!name){ return null}\r\n\r\n    const kelvin = 273.15;\r\n    return ( \r\n    \r\n        <div className=\"card-panel white col s12\">\r\n            <div className=\"black-text\">\r\n                <h2>El clima de {name} es:</h2>\r\n                <p className=\"temperatura\">\r\n                {parseFloat(main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\r\n                </p>\r\n                <p>Temperatura máxima:\r\n                {parseFloat(main.temp_max - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\r\n                </p>\r\n                <p>Temperatura mínima:\r\n                {parseFloat(main.temp_min - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Clima;","import React, {Fragment, useState, useEffect} from 'react';\r\nimport Header from './components/Header';\r\nimport Formulario from './components/Formulario';\r\nimport Clima from './components/Clima';\r\nimport Error from './components/Error';\r\n\r\nfunction App() {\r\n\r\n  const [busqueda, guradarBusqueda] = useState({\r\n    ciudad: \"\",\r\n    pais: \"\"\r\n  });\r\n\r\n  const [consultar, guardarConsultar] = useState(false);\r\n  const [resultado, setResultado] = useState({});\r\n  const [error, setError] = useState(false);\r\n\r\n\r\n  const {ciudad, pais} = busqueda; \r\n\r\n  useEffect(()=>{\r\n    const consultarApi = async() => {\r\n      if(consultar){\r\n        const miapikey = \"bdf8f1193322efd95ab593b7faef3b7d\";\r\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${miapikey}`;\r\n      \r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n  \r\n        setResultado(resultado);\r\n        guardarConsultar(false);\r\n\r\n        //Detectar que exista la ciudad\r\n        if(resultado.cod === \"404\"){\r\n          setError(true);\r\n        }else{\r\n          setError(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    consultarApi();\r\n  }, [consultar]);\r\n\r\n  let  componente;\r\n  if(error){\r\n    componente = <Error mensaje=\"No existe la ciudad que has introducido\" />\r\n  }else{\r\n    componente = <Clima resultado={resultado} />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n    <Header\r\n      titulo=\"El Tiempo con React\"\r\n    />\r\n\r\n    <div className=\"contenedor-form\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col m6 s12\">\r\n            <Formulario \r\n              busqueda={busqueda}\r\n              guradarBusqueda={guradarBusqueda}\r\n              guardarConsultar={guardarConsultar}\r\n            />\r\n          </div>\r\n          <div className=\"col m6 s12\">\r\n            {componente}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}